{
    "sourceFile": "教學簡報/貪吃蛇.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1716957310412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1716957310412,
            "name": "Commit-0",
            "content": "---\r\nmarp: true\r\ntheme: uncover\r\npaginate: true\r\nbackgroundColor: #4C7F99\r\ncolor: #fff\r\n---\r\n# 貪吃蛇小遊戲\r\n## by pygame\r\n---\r\n# 為什麼要用pygame\r\n\r\n---\r\n\r\n# 在vscode終端打入以下指令\r\n## 開啟vscode終端 : ctrl + ` \r\n\r\n```\r\npip install pygame\r\n```\r\n---\r\n## 檢查pygame有沒有安裝在對應版本的python\r\n\r\n```\r\npython -m pygame.examples.aliens\r\n```\r\n---\r\n\r\n## 按ctrl + shift + p 並輸入\r\n```\r\nPython: Select Interpreter\r\n```\r\n選擇和剛剛pygame對應版本的python就好囉!\r\n\r\n---\r\n# 前置作業完成，讓我們開始製作遊戲吧!~~\r\n\r\n---\r\n# 1. 畫出蛇蛇並使其動起來\r\n\r\n---\r\n## 建立遊戲視窗\r\n```python\r\n# 主迴圈外\r\nimport pygame # 導入函式庫\r\n\r\npygame.init() # 初始化pygame\r\n\r\nwindow_x = 800 # 設定遊戲視窗大小\r\nwindow_y = 600\r\nwindow = pygame.display.set_mode((window_x, window_y))\r\n\r\npygame.display.set_caption(\"貪吃蛇小遊戲\") # 定義視窗名稱\r\n```\r\n---\r\n## 設定結束條件\r\n```python\r\n# 主迴圈\r\nrunning = True\r\nwhile running:\r\n    # 偵測事件\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            running = False\r\npygame.quit() # 結束pygame\r\n```\r\n```python\r\n# 返回一個儲存所有未處理事件的列表\r\npygame.event.get()\r\n# 檢查輸入的事件是不是關閉視窗(結束遊戲)\r\nif event.type == pygame.QUIT:\r\n```\r\n---\r\n## 怎麼畫出方塊\r\n```python\r\n# 主迴圈內\r\nwindow.fill(black) # 將畫布填滿黑色\r\npygame.draw.rect(window, green, (0, 0, unit, unit)) # 畫出30*30的綠色矩形\r\npygame.display.update() # 更新畫布\r\n```\r\n```python\r\npygame.draw.rect(surface, color, rect) # 劃出矩形的函式\r\n# surface:要畫的地方\r\n# color:(RGB)顏色\r\n# rect:(左上角x座標, 左上角y座標, 高度, 寬度)\r\n```\r\n---\r\n## 畫出蛇蛇\r\n```python\r\n# 在主迴圈之前設定初始蛇身\r\nsnake_body = [[2 * unit, 0], [unit, 0], [0, 0]]\r\n\r\n# 在主迴圈裡面繪製蛇身\r\nfor body in snake_body:\r\n    pygame.draw.rect(window, green, (body[0], body[1], unit, unit))\r\n```\r\n---\r\n## 讓蛇蛇動起來\r\n我們該怎麼讓蛇蛇**動起來呢**?\r\n-->先伸長再縮短\r\n\r\n---\r\n蛇頭伸長蛇身縮短\r\n```python\r\n# 主迴圈外\r\nsnake_head = [2 * unit, 0]\r\n# 主迴圈內\r\nsnake_head[0] += unit # 新的座標\r\nsnake_body.insert(0, list(snake_head)) # 插入新的座標/伸長\r\nsnake_body.pop() # 刪除最後的座標/縮短\r\n```\r\ninsert(), pop()用法\r\n```python\r\na_list.insert(index, element)\r\n# index : 插入位置的索引\r\n# element : 要插入的元素\r\n\r\na_list.pop(index)\r\n# index : 要移除元素的索引值(默認為-1)\r\n```\r\n---\r\n## 設定速度\r\n```python\r\n# 延遲1秒(單位為毫秒)\r\npygame.time.delay(1000)\r\n\r\n# 在主迴圈之前\r\ngame_speed = 10 # 每秒跑10次迴圈\r\n\r\n# 在主迴圈裡面\r\npygame.time.delay(1000 // game_speed)\r\n```\r\n---\r\n# !!!待驗證!!!\r\n他寫的感覺就是只會處理從開始到第一次運行間的事件而已，因為他沒有更新start_time\r\n```python\r\n# 紀錄迴圈開始前的時間\r\nstart_time = pygame.time.get_ticks()\r\n\r\n# (迴圈當下執行的時間 - 迴圈開始前的時間) < (1000 // game_speed)\r\nwhile pygame.time.get_ticks() - start_time < 1000 // game_speed:\r\n    pygame.event.pump() # 處理佇列中的事件\r\n```\r\n\r\n---\r\n## 改變蛇蛇移動方向\r\n\r\n \\* 重點:新的移動方向和上次的移動方向不能差180度\r\n\r\n---\r\n```python\r\n# 在主迴圈之前\r\ndirection = 'RIGHT' # 預設方向\r\nnew_direction = direction # 新方向\r\n\r\n# 在主迴圈裡面\r\n\r\n# 偵測鍵盤事件\r\nif event.key == pygame.K_d:\r\n    new_direction = 'RIGHT'\r\nelif event.key == pygame.K_a:\r\n    new_direction = 'LEFT'\r\nelif event.key == pygame.K_s:\r\n    new_direction = 'DOWN'\r\nelif event.key == pygame.K_w:\r\n    new_direction = 'UP'\r\n```\r\n如果不想用wasd想使用數字鍵旁的方向鍵  \r\n可以把pygame.K_d改成pygame.K_RIGHT(以此類推)\r\n\r\n---\r\n```python\r\n# 判斷轉彎方向是否合理\r\nif new_direction == 'RIGHT' and direction != 'LEFT':\r\n    direction = 'RIGHT'\r\nelif new_direction == 'LEFT' and direction != 'RIGHT':\r\n    direction = 'LEFT'\r\nelif new_direction == 'DOWN' and direction != 'UP':\r\n    direction = 'DOWN'\r\nelif new_direction == 'UP' and direction != 'DOWN':\r\n    direction = 'UP'\r\n```\r\n---\r\n目前code\r\n```python\r\nimport pygame\r\n\r\nblack = (0, 0, 0)\r\nwhite = (255, 255, 255)\r\nred = (255, 0, 0)\r\ngreen = (0, 255, 0)\r\nblue = (0, 0, 255)\r\n\r\npygame.init()\r\nwindow_x = 800\r\nwindow_y = 600\r\nwindow = pygame.display.set_mode((window_x, window_y))\r\npygame.display.set_caption(\"貪吃蛇小遊戲\")\r\n\r\nunit = 30\r\n\r\nsnake_head = [0, 0]\r\nsnake_body = [[0, 0]]\r\nsnake_length = 3\r\n\r\ndirection = 'RIGHT'\r\nnew_direction = direction\r\n\r\ngame_speed = 10\r\n\r\nrunning = True\r\nwhile running:\r\n\r\n    start_time = pygame.time.get_ticks()\r\n    while pygame.time.get_ticks() - start_time < 1000 // game_speed:\r\n        pygame.event.pump()\r\n\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            running = False\r\n        if event.type == pygame.KEYDOWN:\r\n            if event.key == pygame.K_d:\r\n                new_direction = 'RIGHT'\r\n            elif event.key == pygame.K_a:\r\n                new_direction = 'LEFT'\r\n            elif event.key == pygame.K_s:\r\n                new_direction = 'DOWN'\r\n            elif event.key == pygame.K_w:\r\n                new_direction = 'UP'\r\n\r\n    if new_direction == 'RIGHT' and direction != 'LEFT':\r\n        direction = 'RIGHT'\r\n    elif new_direction == 'LEFT' and direction != 'RIGHT':\r\n        direction = 'LEFT'\r\n    elif new_direction == 'DOWN' and direction != 'UP':\r\n        direction = 'DOWN'\r\n    elif new_direction == 'UP' and direction != 'DOWN':\r\n        direction = 'UP'\r\n\r\n    if direction == 'RIGHT':\r\n        snake_head[0] += unit\r\n    elif direction == 'LEFT':\r\n        snake_head[0] -= unit\r\n    elif direction == 'DOWN':\r\n        snake_head[1] += unit\r\n    elif direction == 'UP':\r\n        snake_head[1] -= unit\r\n\r\n    snake_body.insert(0, list(snake_head))\r\n    snake_body.pop()\r\n\r\n    window.fill(black)\r\n\r\n    for body in snake_body:\r\n        pygame.draw.rect(window, green, (body[0], body[1], unit, unit))\r\n\r\n    pygame.display.update()\r\n\r\npygame.quit()\r\n```\r\n---\r\n# 2. 讓蛇蛇能吃果實長大\r\n\r\n---\r\n\r\n## random函式庫\r\n```python\r\nimport random\r\n\r\n# 隨機返回0到1之間不包含1的浮點數\r\nrandom.random()\r\n\r\n# 隨機返回0到10之間所有整數(包含10)\r\nrandom.randint(0, 10)\r\n\r\n# 返回從0到10之間的整數，每次的間隔為2，不包含10\r\nr3 = [random.randrange(0, 10, 2) for k in range(10)]\r\nprint(r3)\r\n# [0, 4, 6, 0, 8, 4, 8, 0, 8, 6]\r\nr3 = []\r\nfor i in range(10):\r\n    list.append(random.randrange(0, 10, 2))\r\nprint(r3)\r\n```\r\n---\r\n## 生成果實\r\n果實生成的座標以unit為間隔隨機生成\r\n```python\r\n# 在主迴圈之前 / 隨機初始座標\r\nfruit = [random.randrange(0, window_x, unit),\r\n         random.randrange(0, window_y, unit)]\r\n# 在主迴圈裡面 / 繪製果實\r\npygame.draw.rect(window, red, (fruit[0], fruit[1], unit, unit))\r\n```\r\n---\r\n## 避免果實長在蛇身上\r\n```python\r\n# 以遞迴重複確認\r\ndef new_fruit():\r\n    new_pos = [random.randrange(0, window_x, unit),\r\n               random.randrange(0, window_y, unit)]\r\n    if new_pos in snake_body:\r\n        return new_fruit()\r\n    else:\r\n        return new_pos\r\n    \r\n# 初始化果實座標\r\nfruit = new_fruit()\r\n```\r\n---\r\n## 長身體\r\n1. 身體伸長 --> 蛇頭伸長，蛇身不變\r\n2. 吃到果實就再產生一組新的果實座標\r\n```python\r\nif snake_head == fruit:\r\n    fruit = [random.randrange(0, window_x, unit),\r\n             random.randrange(0, window_y, unit)]\r\nelse:\r\n    snake_body.pop()\r\n```\r\n---\r\n## 碰撞判定\r\n1. 不能撞到東西\r\n```python\r\n# x軸邊界\r\nif not(0 <= snake_head[0] < window_x):\r\n    break\r\n# y軸邊界\r\nif not(0 <= snake_head[1] < window_y):\r\n    break\r\n```\r\n2. 不能碰到身體\r\n```python\r\n# snake_body[1:]不包含頭的座標\r\nif snake_head in snake_body[1:]:\r\n    break\r\n```\r\n---\r\n![bg](img/蛇頭撞身體.jpg)\r\n\r\n---\r\n## 目前程式碼\r\n```python\r\nimport pygame\r\nimport random\r\n\r\n\r\ndef new_fruit():\r\n    new_pos = [random.randrange(0, window_x, unit),\r\n               random.randrange(0, window_y, unit)]\r\n    if new_pos in snake_body:\r\n        return new_fruit()\r\n    else:\r\n        return new_pos\r\n\r\n\r\nblack = (0, 0, 0)\r\nwhite = (255, 255, 255)\r\nred = (255, 0, 0)\r\ngreen = (0, 255, 0)\r\nblue = (0, 0, 255)\r\n\r\npygame.init()\r\nwindow_x = 720\r\nwindow_y = 630\r\nwindow = pygame.display.set_mode((window_x, window_y))\r\npygame.display.set_caption(\"Pygame貪食蛇\")\r\n\r\nunit = 30\r\n\r\nsnake_head = [0, 0]\r\nsnake_body = [[0, 0]]\r\nsnake_length = 3\r\nfor i in range(snake_length - 1):\r\n    snake_head[0] += unit\r\n    snake_body.insert(0, list(snake_head))\r\ndirection = 'RIGHT'\r\nnew_direction = direction\r\n\r\nfruit = new_fruit()\r\n\r\ngame_speed = 10\r\n\r\nrunning = True\r\nwhile running:\r\n\r\n    start_time = pygame.time.get_ticks()\r\n    while pygame.time.get_ticks() - start_time < 1000 // game_speed:\r\n        pygame.event.pump()\r\n\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            running = False\r\n        if event.type == pygame.KEYDOWN:\r\n            if event.key == pygame.K_d:\r\n                new_direction = 'RIGHT'\r\n            elif event.key == pygame.K_a:\r\n                new_direction = 'LEFT'\r\n            elif event.key == pygame.K_s:\r\n                new_direction = 'DOWN'\r\n            elif event.key == pygame.K_w:\r\n                new_direction = 'UP'\r\n\r\n    if new_direction == 'RIGHT' and direction != 'LEFT':\r\n        direction = 'RIGHT'\r\n    elif new_direction == 'LEFT' and direction != 'RIGHT':\r\n        direction = 'LEFT'\r\n    elif new_direction == 'DOWN' and direction != 'UP':\r\n        direction = 'DOWN'\r\n    elif new_direction == 'UP' and direction != 'DOWN':\r\n        direction = 'UP'\r\n\r\n    if direction == 'RIGHT':\r\n        snake_head[0] += unit\r\n    elif direction == 'LEFT':\r\n        snake_head[0] -= unit\r\n    elif direction == 'DOWN':\r\n        snake_head[1] += unit\r\n    elif direction == 'UP':\r\n        snake_head[1] -= unit\r\n\r\n    snake_body.insert(0, list(snake_head))\r\n\r\n    if snake_head == fruit:\r\n        fruit = new_fruit()\r\n    else:\r\n        snake_body.pop()\r\n\r\n    if not (0 <= snake_head[0] < window_x):\r\n        break\r\n    if not(0 <= snake_head[1] < window_y):\r\n        break\r\n    if snake_head in snake_body[1:]:\r\n        break\r\n\r\n    window.fill(black)\r\n\r\n    for body in snake_body:\r\n        pygame.draw.rect(window, green, (body[0], body[1], unit, unit))\r\n\r\n    pygame.draw.rect(window, red, (fruit[0], fruit[1], unit, unit))\r\n\r\n    pygame.display.update()\r\n\r\npygame.quit()\r\n```\r\n---\r\n# 3.物件導向設計\r\n### 目標：優化程式架構和製作記分板。\r\n## 記分板\r\n宣告一個用來計算分數的變數,接著把文字貼到視窗上\r\n```python\r\n# 在主迴圈之前\r\nscore = 0\r\n\r\n# 在主迴圈裡面\r\nif snake_head == fruit: # 吃到果實加1分\r\n    score += 1\r\n    \r\ntext_font = pygame.font.SysFont(\"\", 60)  # 字體及大小\r\ntext_surface = text_font.render(str(score), True, white)  # 文字和顏色\r\ntext_rect = text_surface.get_rect()  # 取得矩形的值\r\nwindow.blit(text_surface, text_rect)  # 以左上為錨點顯示文字\r\n```\r\n但以上方法太他媽麻煩了 ! 所以我們用class簡化\r\n```python\r\nclass Text:\r\n    def __init__(self, txt, size):\r\n        font = pygame.font.SysFont(\"\", size)\r\n        self.surface = font.render(txt, True, white)\r\n        self.rect = self.surface.get_rect()\r\n        window.blit(self.surface, self.rect)\r\n        \r\nText(str(score), 60) # 一行搞定\r\n```\r\nclass的用處有點類似收納櫃，將類似性質的物件歸納在一起\r\n## 物件導向\r\n物件（Object）：class的實例，包含屬性和方法。每個物件都是獨立的實體，有自己的狀態和功能。\r\n\r\n類別（Class）：物件的屬性和方法。可創建多個相似的物件。\r\n\r\n屬性（Attributes）：物件的數據或狀態，用變數表示。\r\n\r\n方法（Methods）：物件的行為或功能，定義在class中的函數\r\n\r\n```python\r\n# 貪食蛇\r\nclass Snake:\r\n    def __init__(self, color, head):\r\n        self.color = color # 顏色\r\n        self.head = head\r\n        self.body = [head]\r\n        self.direction = 'RIGHT'\r\n        self.new_direction = 'RIGHT'\r\n        length = 4 # 這是常數不用寫成屬性\r\n        for i in range(length - 1):\r\n            self.head[0] += unit\r\n            self.body.insert(0, list(self.head))\r\n```\r\n```python\r\n# 果實\r\nclass Fruit:\r\n    def __init__(self):\r\n        self.pos = self.new_fruit()\r\n\r\n    def new_fruit(self):\r\n        new_pos = [random.randrange(0, window_x, unit),\r\n                   random.randrange(0, window_y, unit)]\r\n        if new_pos in snake.body:\r\n            return self.new_fruit()\r\n        else:\r\n            return new_pos\r\n```\r\nnew_fruit()是一個函式，函式無法直接修改外部的變數，所以需要讓它回傳座標值到外部。而在class裡可以用method直接修改屬性值。\r\n```python\r\ndef __init__(self):\r\n    self.pos = [0, 0]\r\n    self.spawn()\r\n\r\ndef spawn(self):\r\n    self.pos = [random.randrange(0, window_x, unit),\r\n                random.randrange(0, window_y, unit)]\r\n    if self.pos in snake.body:\r\n        self.spawn()\r\n```\r\n\r\n## 重新開始\r\n原本的程式在輸了之後會直接結束，每次都需要重新執行一次。我們可以在遊戲結束後確認是否重新開始\r\n```python\r\nwhile True:\r\n    # 宣告變數\r\n    ...\r\n    \r\n    # 遊戲主程式\r\n    running = True\r\n    while running:\r\n        ...\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n        ...\r\n    \r\n    # 按下Enter重新開始\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                running = False\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_RETURN:\r\n                    running = False\r\n                    \r\npygame.quit() # 可以刪除\r\n```\r\n原本是用running = False的方式結束程式，但在外加上迴圈後就變成重新開始了。所以我們換個方式 ! sys函式庫提供一系列和操作系統相關的功能，包括退出當前程式。\r\n```python\r\nimport sys\r\nsys.exit() # 退出程式\r\n```\r\n為了exit()把整個sys函式庫導入會增加程式負擔，我們可以用from sys import exit單獨導入函式。\r\n```python\r\nfrom sys import exit\r\nexit() # 前綴可以省略因為已經直接從sys導入了。\r\n```\r\n在退出程式前，要記得先退出pygame。沒退出的話.....也不會怎樣，但還是養成習慣比較好~\r\n```python\r\n# 遊戲主程式\r\nrunning = True\r\nwhile running:\r\n    ...\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            pygame.quit()\r\n            exit()\r\n    ...\r\n\r\n# 按下Enter重新開始\r\nrunning = True\r\nwhile running:\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            pygame.quit()\r\n            exit()\r\n        if event.type == pygame.KEYDOWN:\r\n            if event.key == pygame.K_RETURN:\r\n                running = False\r\n```\r\n![bg](img/enter重新開始.PNG)    \r\n## 目前code\r\n```python\r\nimport pygame\r\nimport random\r\nfrom sys import exit\r\n\r\n\r\nclass Text:\r\n    def __init__(self, txt, size):\r\n        font = pygame.font.SysFont(\"\", size)\r\n        self.surface = font.render(txt, True, white)\r\n        self.rect = self.surface.get_rect()\r\n        window.blit(self.surface, self.rect)\r\n\r\n\r\nclass Snake:\r\n    def __init__(self, color, head):\r\n        self.color = color\r\n        self.head = head\r\n        self.body = [head]\r\n        self.direction = 'RIGHT'\r\n        self.new_direction = 'RIGHT'\r\n        length = 4\r\n        for i in range(length - 1):\r\n            self.head[0] += unit\r\n            self.body.insert(0, list(self.head))\r\n\r\n\r\nclass Fruit:\r\n    def __init__(self):\r\n        self.pos = [0, 0]\r\n        self.spawn()\r\n\r\n    def spawn(self):\r\n        self.pos = [random.randrange(0, window_x, unit),\r\n                    random.randrange(0, window_y, unit)]\r\n        if self.pos in snake.body:\r\n            self.spawn()\r\n\r\n\r\nblack = (0, 0, 0)\r\nwhite = (255, 255, 255)\r\nred = (255, 0, 0)\r\ngreen = (0, 255, 0)\r\nblue = (0, 0, 255)\r\n\r\npygame.init()\r\nwindow_x = 720\r\nwindow_y = 630\r\nwindow = pygame.display.set_mode((window_x, window_y))\r\npygame.display.set_caption(\"Pygame貪食蛇\")\r\n\r\ngame_speed = 10\r\nunit = 30\r\n\r\nwhile True:\r\n\r\n    score = 0\r\n    snake = Snake(green, [0, 0])\r\n    fruit = Fruit()\r\n\r\n    while True:\r\n\r\n        start_time = pygame.time.get_ticks()\r\n        while pygame.time.get_ticks() - start_time < 1000 // game_speed:\r\n            pygame.event.pump()\r\n\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                exit()\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_d:\r\n                    snake.new_direction = 'RIGHT'\r\n                elif event.key == pygame.K_a:\r\n                    snake.new_direction = 'LEFT'\r\n                elif event.key == pygame.K_s:\r\n                    snake.new_direction = 'DOWN'\r\n                elif event.key == pygame.K_w:\r\n                    snake.new_direction = 'UP'\r\n\r\n        if snake.new_direction == 'RIGHT' and snake.direction != 'LEFT':\r\n            snake.direction = 'RIGHT'\r\n        elif snake.new_direction == 'LEFT' and snake.direction != 'RIGHT':\r\n            snake.direction = 'LEFT'\r\n        elif snake.new_direction == 'DOWN' and snake.direction != 'UP':\r\n            snake.direction = 'DOWN'\r\n        elif snake.new_direction == 'UP' and snake.direction != 'DOWN':\r\n            snake.direction = 'UP'\r\n\r\n        if snake.direction == 'RIGHT':\r\n            snake.head[0] += unit\r\n        elif snake.direction == 'LEFT':\r\n            snake.head[0] -= unit\r\n        elif snake.direction == 'DOWN':\r\n            snake.head[1] += unit\r\n        elif snake.direction == 'UP':\r\n            snake.head[1] -= unit\r\n\r\n        snake.body.insert(0, list(snake.head))\r\n        if snake.head == fruit.pos:\r\n            fruit.spawn()\r\n            score += 1\r\n        else:\r\n            snake.body.pop()\r\n\r\n        if not (0 <= snake.head[0] < window_x):\r\n            break\r\n        if not(0 <= snake.head[1] < window_y):\r\n            break\r\n        if snake.head in snake.body[1:]:\r\n            break\r\n\r\n        window.fill(black)\r\n\r\n        for body in snake.body:\r\n            pygame.draw.rect(window, snake.color, (body[0], body[1], unit, unit))\r\n        pygame.draw.rect(window, red, (fruit.pos[0], fruit.pos[1], unit, unit))\r\n\r\n        Text(str(score), 60)\r\n\r\n        pygame.display.update()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                exit()\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_RETURN:\r\n                    running = False\r\n```\r\n# 4.美化遊戲介面\r\n### 目標：導入圖片和音效讓遊戲看起來更美觀。\r\n# ?????這裡有問題?????\r\n素材要給嗎? 怎麼給?\r\n## 遊戲背景\r\n```python\r\nimg = pygame.image.load(\"PATH/image.png\").convert() # 載入圖片並轉換\r\nwindow.blit(img, (0, 0)) # 在window的(0, 0)畫出圖片\r\n```\r\nconvert()的用途是把圖片轉換成像素格式。\r\n```python\r\n# 從resources資料夾中導入背景圖片並轉換\r\nbackground = pygame.image.load(\"resources/background.png\").convert()\r\n# 繪製圖片\r\nwindow.blit(background, (0, 0))\r\n```\r\n原本背景是全黑畫布，可以自行改為任何圖片\r\n## 矩形邊框和圓角\r\n除了可以設定座標和大小之外，矩形還有邊框和圓角可以設定\r\n```python\r\npygame.draw.rect(surface, color, rect, width, border_radius)\r\n# width - 空心矩形的邊框寬度，預設為0就代表實心。\r\n# border radius - 矩形的圓角半徑，預設為-1代表直角\r\n```\r\n可用以下參數和顏色繪製更多細節\r\n```python \r\n# 在主迴圈之前\r\nclass Snake:\r\n    def __init__(self, c1, c2, head):\r\n        self.color1 = c1 # 底色\r\n        self.color2 = c2 # 邊框色\r\n        \r\n# 更多的顏色\r\nblack = (0, 0, 0)\r\ngrey = (85, 85, 85)\r\nwhite = (255, 255, 255)\r\nred = (229, 46, 8)\r\ndarkRed = (157, 31, 6)\r\ngreen = (64, 201, 73)\r\ndarkGreen = (36, 127, 42)\r\nblue = (78, 124, 246)\r\ndarkBlue = (9, 53, 174)\r\npurple = (182, 72, 242)\r\ndarkPurple = (116, 12, 172)\r\n\r\n# 在主迴圈裡面\r\nsnake = Snake(green, darkGreen, [0, 0])\r\n```\r\n接著為蛇蛇和果實加上邊框並在右下角加上陰影 !\r\n```python\r\n# 蛇蛇的陰影\r\npygame.draw.rect(window, grey, (snake.head[0], snake.head[1], unit + 2, unit + 2))\r\nfor body in snake.body[1:]:\r\n    pygame.draw.rect(window, grey, (body[0] + 1, body[1] + 1, unit, unit))\r\n\r\n# 蛇頭\r\npygame.draw.rect(window, snake.color1, (snake.head[0] - 1, snake.head[1] - 1, unit + 2, unit + 2))\r\npygame.draw.rect(window, snake.color2, (snake.head[0] - 1, snake.head[1] - 1, unit + 2, unit + 2), 2)\r\n\r\n# 蛇身\r\nfor body in snake.body[1:]:\r\n    pygame.draw.rect(window, snake.color1, (body[0], body[1], unit, unit))\r\n    pygame.draw.rect(window, snake.color2, (body[0], body[1], unit, unit), 2)\r\n    \r\n# 果實\r\npygame.draw.rect(canvas, grey, (fruit.pos[0] + 3, fruit.pos[1] + 3, unit - 4, unit - 4), 0, 3)\r\npygame.draw.rect(canvas, red, (fruit.pos[0] + 2, fruit.pos[1] + 2, unit - 4, unit - 4), 0, 3)\r\npygame.draw.rect(canvas, darkRed, (fruit.pos[0] + 2, fruit.pos[1] + 2, unit - 4, unit - 4), 2, 3)\r\n```\r\n![bg](img/貪吃蛇.png) \r\n\r\n## 透明圖片\r\nconvert_alpha()在轉換圖片時會保留透明通道，讓圖片可以有透明的背景。可以給蛇蛇畫一張臉，或製作半透明的結束畫面。\r\n```python\r\n# 主迴圈之前\r\nface = pygame.image.load(\"resources/face.png\").convert_alpha()\r\ngame_over = pygame.image.load(\"resources/game_over.png\").convert_alpha()\r\n\r\n# 主迴圈裡面\r\nwindow.blit(face, snake.head)\r\n\r\n# 主迴圈之後\r\nwindow.blit(game_over, (0, 0))\r\npygame.display.update()\r\n```\r\n## 新建畫布\r\n若想把記分板顯示在遊戲區域外，可建立一層新的畫布，用來畫遊戲區域、邊框和記分板。\r\n```python \r\n# 主畫布(整個視窗)\r\nwindow = pygame.display.set_mode((780, 780))\r\n\r\n# 遊戲區域\r\ncanvas_x = 720\r\ncanvas_y = 630\r\ncanvas = pygame.Surface((canvas_x, canvas_y))\r\n\r\n# 導入邊框圖片並轉換\r\nborder = pygame.image.load(\"resources/border.png\").convert()\r\n```\r\ncanvas是新建立的畫布，用來畫蛇蛇的遊戲區域。將主迴圈中原本的window改成canvas後，畫到主畫布上。\r\n```python\r\nwindow.blit(border, (0, 0)) # 在主畫布畫出邊框\r\nwindow.blit(canvas, (30, 120)) # 在主畫布畫出遊戲區域\r\n```\r\n## 文字設定\r\n可以傳遞更多參數，如顏色和字體給文字添加更多花樣\r\n```python\r\nclass Text:\r\n    def __init__(self, txt, size, color, font):\r\n        font = pygame.font.SysFont(font, size)\r\n        self.surface = font.render(txt, True, color)\r\n        self.rect = self.surface.get_rect()\r\n        window.blit(self.surface, self.rect)\r\n```\r\n要讓文字顯示在指定位置需在畫出來之前移動矩形到指定座標，移動的方法主要分為兩種。\r\n```python\r\nrect.move_ip(x, y) # 方法(method) 相對位移\r\nrect.topleft = (x, y) # 虛擬屬性(virtual attributes) 絕對定位\r\n```\r\n#### move_ip() 用法\r\n左上角為錨點，若想要以其他錨點為基準移動，可以用修改虛擬屬性的方式，矩形有九個錨點分別為：\r\n\r\ntopleft midtop topright\r\n\r\nmidleft center midright\r\n\r\nbottomleft midbottom bottomright\r\n\r\nlass需要用到不同的錨點時，可以寫多個方法來使用\r\n```python\r\nclass Text:\r\n    def __init__(self, txt, size, color, font):\r\n        font = pygame.font.SysFont(font, size)\r\n        self.surface = font.render(txt, True, color)\r\n        self.rect = self.surface.get_rect()\r\n    # 左上\r\n    def topleft(self, x, y):\r\n        self.rect.topleft = (x, y)\r\n        window.blit(self.surface, self.rect)\r\n    # 左中\r\n    def midleft(self,x , y):\r\n        self.rect.midleft = (x, y)\r\n        window.blit(self.surface, self.rect)\r\n    ...\r\n\r\n# 記分板\r\nText(str(score), 45, white, \"impact\").midleft(90, 45)\r\n```\r\n## 加點音樂 ! \r\n要在遊戲中撥放背景音樂和音效需要用到pygame的mixer模組\r\n```python\r\n# 初始化混音器模組\r\npygame.mixer.init()\r\n# 導入一個音效\r\nsfx = pygame.mixer.Sound(\"PATH/sfx.wav\")\r\n# 播放\r\nsfx.play()\r\n# 停止\r\nsfx.stop()\r\n```\r\n導入背景音樂、得分音效和遊戲結束音效，用play(-1)讓背景音樂循環播放\r\n```python\r\n# 在主迴圈之前\r\npygame.mixer.init()\r\nbgm = pygame.mixer.Sound(\"resources/bgm.wav\")\r\nfruit_sfx = pygame.mixer.Sound(\"resources/fruit.wav\")\r\ngame_over_sfx = pygame.mixer.Sound(\"resources/game_over.wav\")\r\nbgm.play(-1) # 循環播放背景音樂\r\n\r\n# 在主迴圈裡面\r\nif snake.head == fruit.pos:\r\n    fruit_sfx.play() # 果實音效\r\n    \r\n# 在主迴圈之後\r\ngame_over_sfx.play() # 遊戲結束音效\r\n```\r\n## 完整程式碼\r\n```python\r\nimport pygame\r\nimport random\r\nfrom sys import exit\r\n\r\n\r\nclass Text:\r\n    def __init__(self, txt, size, color, font):\r\n        font = pygame.font.SysFont(font, size)\r\n        self.surface = font.render(txt, True, color)\r\n        self.rect = self.surface.get_rect()\r\n\r\n    def midleft(self, x, y):\r\n        self.rect.midleft = (x, y)\r\n        window.blit(self.surface, self.rect)\r\n\r\n\r\nclass Snake:\r\n    def __init__(self, c1, c2, head):\r\n        self.color1 = c1\r\n        self.color2 = c2\r\n        self.head = head\r\n        self.body = [head]\r\n        self.direction = 'RIGHT'\r\n        self.new_direction = 'RIGHT'\r\n        length = 4\r\n        for i in range(length - 1):\r\n            self.head[0] += unit\r\n            self.body.insert(0, list(self.head))\r\n\r\n\r\nclass Fruit:\r\n    def __init__(self):\r\n        self.pos = [0, 0]\r\n        self.spawn()\r\n\r\n    def spawn(self):\r\n        self.pos = [random.randrange(0, canvas_x, unit),\r\n                    random.randrange(0, canvas_y, unit)]\r\n        if self.pos in snake.body:\r\n            self.spawn()\r\n\r\n\r\nblack = (0, 0, 0)\r\ngrey = (85, 85, 85)\r\nwhite = (255, 255, 255)\r\nred = (229, 46, 8)\r\ndarkRed = (157, 31, 6)\r\ngreen = (64, 201, 73)\r\ndarkGreen = (36, 127, 42)\r\nblue = (78, 124, 246)\r\ndarkBlue = (9, 53, 174)\r\npurple = (182, 72, 242)\r\ndarkPurple = (116, 12, 172)\r\n\r\npygame.init()\r\nwindow = pygame.display.set_mode((780, 780))\r\npygame.display.set_caption(\"Pygame貪食蛇\")\r\n\r\ncanvas_x = 720\r\ncanvas_y = 630\r\ncanvas = pygame.Surface((canvas_x, canvas_y))\r\n\r\nbackground = pygame.image.load(\"resources/background.png\").convert()\r\nborder = pygame.image.load(\"resources/border.png\").convert()\r\nface = pygame.image.load(\"resources/face.png\").convert_alpha()\r\ngame_over = pygame.image.load(\"resources/game_over.png\").convert_alpha()\r\n\r\npygame.mixer.init()\r\nbgm = pygame.mixer.Sound(\"resources/bgm.wav\")\r\nfruit_sfx = pygame.mixer.Sound(\"resources/fruit.wav\")\r\ngame_over_sfx = pygame.mixer.Sound(\"resources/game_over.wav\")\r\nbgm.play(-1)\r\n\r\ngame_speed = 10\r\nunit = 30\r\n\r\nwhile True:\r\n\r\n    score = 0\r\n    snake = Snake(green, darkGreen, [0, 0])\r\n    fruit = Fruit()\r\n\r\n    while True:\r\n\r\n        start_time = pygame.time.get_ticks()\r\n        while pygame.time.get_ticks() - start_time < 1000 // game_speed:\r\n            pygame.event.pump()\r\n\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                exit()\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_d:\r\n                    snake.new_direction = 'RIGHT'\r\n                elif event.key == pygame.K_a:\r\n                    snake.new_direction = 'LEFT'\r\n                elif event.key == pygame.K_s:\r\n                    snake.new_direction = 'DOWN'\r\n                elif event.key == pygame.K_w:\r\n                    snake.new_direction = 'UP'\r\n\r\n        if snake.new_direction == 'RIGHT' and snake.direction != 'LEFT':\r\n            snake.direction = 'RIGHT'\r\n        elif snake.new_direction == 'LEFT' and snake.direction != 'RIGHT':\r\n            snake.direction = 'LEFT'\r\n        elif snake.new_direction == 'DOWN' and snake.direction != 'UP':\r\n            snake.direction = 'DOWN'\r\n        elif snake.new_direction == 'UP' and snake.direction != 'DOWN':\r\n            snake.direction = 'UP'\r\n\r\n        if snake.direction == 'RIGHT':\r\n            snake.head[0] += unit\r\n        elif snake.direction == 'LEFT':\r\n            snake.head[0] -= unit\r\n        elif snake.direction == 'DOWN':\r\n            snake.head[1] += unit\r\n        elif snake.direction == 'UP':\r\n            snake.head[1] -= unit\r\n\r\n        snake.body.insert(0, list(snake.head))\r\n\r\n        if snake.head == fruit.pos:\r\n            fruit_sfx.play()\r\n            fruit.spawn()\r\n            score += 1\r\n        else:\r\n            snake.body.pop()\r\n\r\n        if not (0 <= snake.head[0] < canvas_x):\r\n            break\r\n        if not(0 <= snake.head[1] < canvas_y):\r\n            break\r\n        if snake.head in snake.body[1:]:\r\n            break\r\n\r\n        canvas.blit(background, (0, 0))\r\n\r\n        pygame.draw.rect(canvas, grey, (snake.head[0], snake.head[1], unit + 2, unit + 2))\r\n        for body in snake.body[1:]:\r\n            pygame.draw.rect(canvas, grey, (body[0] + 1, body[1] + 1, unit, unit))\r\n\r\n        pygame.draw.rect(canvas, snake.color1, (snake.head[0] - 1, snake.head[1] - 1, unit + 2, unit + 2))\r\n        pygame.draw.rect(canvas, snake.color2, (snake.head[0] - 1, snake.head[1] - 1, unit + 2, unit + 2), 2)\r\n\r\n        for body in snake.body[1:]:\r\n            pygame.draw.rect(canvas, snake.color1, (body[0], body[1], unit, unit))\r\n            pygame.draw.rect(canvas, snake.color2, (body[0], body[1], unit, unit), 2)\r\n\r\n        canvas.blit(face, snake.head)\r\n\r\n        pygame.draw.rect(canvas, grey, (fruit.pos[0] + 3, fruit.pos[1] + 3, unit - 4, unit - 4), 0, 3)\r\n        pygame.draw.rect(canvas, red, (fruit.pos[0] + 2, fruit.pos[1] + 2, unit - 4, unit - 4), 0, 3)\r\n        pygame.draw.rect(canvas, darkRed, (fruit.pos[0] + 2, fruit.pos[1] + 2, unit - 4, unit - 4), 2, 3)\r\n\r\n        window.blit(border, (0, 0))\r\n        window.blit(canvas, (30, 120))\r\n        Text(str(score), 45, white, \"impact\").midleft(90, 45)\r\n\r\n        pygame.display.update()\r\n\r\n    game_over_sfx.play()\r\n    window.blit(game_over, (0, 0))\r\n    pygame.display.update()\r\n\r\n    running = True\r\n    while running:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                exit()\r\n            if event.type == pygame.KEYDOWN:\r\n                if event.key == pygame.K_RETURN:\r\n                    running = False\r\n```\r\n# 以上~~~ 感謝各位 ~~\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        }
    ]
}